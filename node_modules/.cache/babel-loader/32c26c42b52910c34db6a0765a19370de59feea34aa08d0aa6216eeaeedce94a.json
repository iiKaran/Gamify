{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niten\\\\Desktop\\\\React\\\\Gamify\\\\src\\\\Games\\\\Snake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Snake.css';\n// import { Location } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst updateFoodPosition = () => {\n  // Passing a random 1 - 30 value as food position\n  foodX = Math.floor(Math.random() * 30) + 1;\n  foodY = Math.floor(Math.random() * 30) + 1;\n};\nlet gameOver = false;\nlet foodX, foodY;\nlet snakeX = 5,\n  snakeY = 5;\nlet highScore = 0;\nlet velocityX = 0,\n  velocityY = 0;\nlet snakeBody = [];\nlet setIntervalId;\nlet score = 0;\nconst handleGameOver = () => {\n  // Clearing the timer and reloading the page on game over\n  clearInterval(setIntervalId);\n  alert(\"Game Over! Press OK to replay...\");\n  // location.reload();\n};\n\nexport default function Snake() {\n  _s();\n  useEffect(() => {\n    const playBoard = document.querySelector(\".play-board\");\n    const scoreElement = document.querySelector(\".score\");\n    const highScoreElement = document.querySelector(\".high-score\");\n    const controls = document.querySelectorAll(\".controls i\");\n\n    // Calling changeDirection on each key click and passing key dataset value as an object\n    controls.forEach(button => button.addEventListener(\"click\", () => changeDirection({\n      key: button.dataset.key\n    })));\n    let html = `<div class=\"food\" style=\"grid-area: ${foodY} / ${foodX}\"></div>`;\n    const initGame = () => {\n      if (gameOver) return handleGameOver();\n\n      // Checking if the snake hit the food\n      if (snakeX === foodX && snakeY === foodY) {\n        updateFoodPosition();\n        snakeBody.push([foodY, foodX]); // Pushing food position to snake body array\n        score++; // increment score by 1\n        highScore = score >= highScore ? score : highScore;\n        localStorage.setItem(\"high-score\", highScore);\n        scoreElement.innerText = `Score: ${score}`;\n        highScoreElement.innerText = `High Score: ${highScore}`;\n      }\n      // Updating the snake's head position based on the current velocity\n      snakeX += velocityX;\n      snakeY += velocityY;\n\n      // Shifting forward the values of the elements in the snake body by one\n      for (let i = snakeBody.length - 1; i > 0; i--) {\n        snakeBody[i] = snakeBody[i - 1];\n      }\n      snakeBody[0] = [snakeX, snakeY]; // Setting first element of snake body to current snake position\n\n      // Checking if the snake's head is out of wall, if so setting gameOver to true\n      if (snakeX <= 0 || snakeX > 30 || snakeY <= 0 || snakeY > 30) {\n        return gameOver = true;\n      }\n      for (let i = 0; i < snakeBody.length; i++) {\n        // Adding a div for each part of the snake's body\n        html += `<div class=\"head\" style=\"grid-area: ${snakeBody[i][1]} / ${snakeBody[i][0]}\"></div>`;\n        // Checking if the snake head hit the body, if so set gameOver to true\n        if (i !== 0 && snakeBody[0][1] === snakeBody[i][1] && snakeBody[0][0] === snakeBody[i][0]) {\n          gameOver = true;\n        }\n      }\n    };\n    updateFoodPosition();\n    setIntervalId = setInterval(initGame, 100);\n    document.addEventListener(\"keyup\", changeDirection);\n    playBoard.innerHTML = html;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"game-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"score\",\n          children: \"Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"high-score\",\n          children: \"High Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"play-board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          \"data-key\": \"ArrowLeft\",\n          class: \"fa-solid fa-arrow-left-long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          \"data-key\": \"ArrowUp\",\n          class: \"fa-solid fa-arrow-up-long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          \"data-key\": \"ArrowRight\",\n          class: \"fa-solid fa-arrow-right-long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          \"data-key\": \"ArrowDown\",\n          class: \"fa-solid fa-arrow-down-long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Snake, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Snake;\nvar _c;\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","updateFoodPosition","foodX","Math","floor","random","foodY","gameOver","snakeX","snakeY","highScore","velocityX","velocityY","snakeBody","setIntervalId","score","handleGameOver","clearInterval","alert","Snake","_s","playBoard","document","querySelector","scoreElement","highScoreElement","controls","querySelectorAll","forEach","button","addEventListener","changeDirection","key","dataset","html","initGame","push","localStorage","setItem","innerText","i","length","setInterval","innerHTML","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/niten/Desktop/React/Gamify/src/Games/Snake.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport './Snake.css'\r\n// import { Location } from 'react-router-dom';\r\nconst updateFoodPosition = () => {\r\n    // Passing a random 1 - 30 value as food position\r\n    foodX = Math.floor(Math.random() * 30) + 1;\r\n    foodY = Math.floor(Math.random() * 30) + 1;\r\n}\r\nlet gameOver = false;\r\nlet foodX, foodY;\r\nlet snakeX = 5, snakeY = 5;\r\nlet highScore= 0;\r\n\r\nlet velocityX = 0, velocityY = 0;\r\nlet snakeBody = [];\r\nlet setIntervalId;\r\nlet score = 0;\r\n\r\nconst handleGameOver = () => {\r\n    // Clearing the timer and reloading the page on game over\r\n    clearInterval(setIntervalId);\r\n    alert(\"Game Over! Press OK to replay...\");\r\n    // location.reload();\r\n}\r\nexport default function Snake() {\r\n    useEffect(() => {\r\nconst playBoard = document.querySelector(\".play-board\");\r\nconst scoreElement = document.querySelector(\".score\");\r\nconst highScoreElement = document.querySelector(\".high-score\");\r\nconst controls = document.querySelectorAll(\".controls i\");\r\n\r\n\r\n\r\n// Calling changeDirection on each key click and passing key dataset value as an object\r\ncontrols.forEach(button => button.addEventListener(\"click\", () => changeDirection({ key: button.dataset.key })));\r\n\r\nlet html = `<div class=\"food\" style=\"grid-area: ${foodY} / ${foodX}\"></div>`;\r\nconst initGame = () => {\r\n    if(gameOver) return handleGameOver();\r\n\r\n    // Checking if the snake hit the food\r\n    if(snakeX === foodX && snakeY === foodY) {\r\n        updateFoodPosition();\r\n        snakeBody.push([foodY, foodX]); // Pushing food position to snake body array\r\n        score++; // increment score by 1\r\n        highScore = score >= highScore ? score : highScore;\r\n        localStorage.setItem(\"high-score\", highScore);\r\n        scoreElement.innerText = `Score: ${score}`;\r\n        highScoreElement.innerText = `High Score: ${highScore}`;\r\n    }\r\n    // Updating the snake's head position based on the current velocity\r\n    snakeX += velocityX;\r\n    snakeY += velocityY;\r\n    \r\n    // Shifting forward the values of the elements in the snake body by one\r\n    for (let i = snakeBody.length - 1; i > 0; i--) {\r\n        snakeBody[i] = snakeBody[i - 1];\r\n    }\r\n    snakeBody[0] = [snakeX, snakeY]; // Setting first element of snake body to current snake position\r\n\r\n    // Checking if the snake's head is out of wall, if so setting gameOver to true\r\n    if(snakeX <= 0 || snakeX > 30 || snakeY <= 0 || snakeY > 30) {\r\n        return gameOver = true;\r\n    }\r\n\r\n    for (let i = 0; i < snakeBody.length; i++) {\r\n        // Adding a div for each part of the snake's body\r\n        html += `<div class=\"head\" style=\"grid-area: ${snakeBody[i][1]} / ${snakeBody[i][0]}\"></div>`;\r\n        // Checking if the snake head hit the body, if so set gameOver to true\r\n        if (i !== 0 && snakeBody[0][1] === snakeBody[i][1] && snakeBody[0][0] === snakeBody[i][0]) {\r\n            gameOver = true;\r\n        }\r\n    }\r\n   \r\n}\r\n\r\nupdateFoodPosition();\r\nsetIntervalId = setInterval(initGame, 100);\r\ndocument.addEventListener(\"keyup\", changeDirection);\r\n       playBoard.innerHTML = html;\r\n      }, []);\r\n  return (\r\n    <body>\r\n          <div class=\"wrapper\">\r\n      <div class=\"game-details\">\r\n        <span class=\"score\">Score: 0</span>\r\n        <span class=\"high-score\">High Score: 0</span>\r\n      </div>\r\n      <div class=\"play-board\"></div>\r\n      <div class=\"controls\">\r\n        <i data-key=\"ArrowLeft\" class=\"fa-solid fa-arrow-left-long\"></i>\r\n        <i data-key=\"ArrowUp\" class=\"fa-solid fa-arrow-up-long\"></i>\r\n        <i data-key=\"ArrowRight\" class=\"fa-solid fa-arrow-right-long\"></i>\r\n        <i data-key=\"ArrowDown\" class=\"fa-solid fa-arrow-down-long\"></i>\r\n      </div>\r\n    </div>\r\n    </body>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}