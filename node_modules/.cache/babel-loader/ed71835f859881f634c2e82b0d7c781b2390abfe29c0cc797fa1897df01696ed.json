{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niten\\\\Desktop\\\\React\\\\Gamify\\\\src\\\\Games\\\\Quiz\\\\QuizComp.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './quizstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizComp = () => {\n  _s();\n  var Questionbank = [{\n    Question: \"What is the capital of India?\",\n    Answers: [{\n      Answer: \"Delhi\",\n      isCorrect: true\n    }, {\n      Answer: \"Pune\",\n      isCorrect: false\n    }, {\n      Answer: \"Ranchi\",\n      isCorrect: false\n    }, {\n      Answer: \"Patna\",\n      isCorrect: false\n    }]\n  }, {\n    Question: \"Who is the PM of India?\",\n    Answers: [{\n      Answer: \"Amit Shah\",\n      isCorrect: false\n    }, {\n      Answer: \"Modi\",\n      isCorrect: true\n    }, {\n      Answer: \"Raga\",\n      isCorrect: false\n    }, {\n      Answer: \"Kejri\",\n      isCorrect: false\n    }]\n  }, {\n    Question: \"2 +3 = ?\",\n    Answers: [{\n      Answer: \"5\",\n      isCorrect: true\n    }, {\n      Answer: \"7\",\n      isCorrect: false\n    }, {\n      Answer: \"4\",\n      isCorrect: false\n    }, {\n      Answer: \"3\",\n      isCorrect: false\n    }]\n  }, {\n    Question: \"What comes after january?\",\n    Answers: [{\n      Answer: \"feb\",\n      isCorrect: true\n    }, {\n      Answer: \"march\",\n      isCorrect: false\n    }, {\n      Answer: \"june\",\n      isCorrect: false\n    }, {\n      Answer: \"sept\",\n      isCorrect: false\n    }]\n  }, {\n    Question: \"Which company pankaj is working currently?\",\n    Answers: [{\n      Answer: \"Accenture\",\n      isCorrect: false\n    }, {\n      Answer: \"Oracle\",\n      isCorrect: false\n    }, {\n      Answer: \"L&T\",\n      isCorrect: true\n    }, {\n      Answer: \"IBM\",\n      isCorrect: false\n    }]\n  }];\n\n  //useState Hook\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const handleAnswerResponse = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < Questionbank.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const resetQuiz = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You have scored \", score, \" out of \", Questionbank.length, /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: resetQuiz,\n          children: \"Play Again!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentQuestion + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 32\n          }, this), \"/\", Questionbank.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: Questionbank[currentQuestion].Question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: Questionbank[currentQuestion].Answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerResponse(answer.isCorrect),\n          children: answer.Answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizComp, \"/sy2pvX1Q0450pE8xQIdkgXJpdM=\");\n_c = QuizComp;\nexport default QuizComp;\nvar _c;\n$RefreshReg$(_c, \"QuizComp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizComp","_s","Questionbank","Question","Answers","Answer","isCorrect","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","handleAnswerResponse","nextQuestion","length","resetQuiz","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","_c","$RefreshReg$"],"sources":["C:/Users/niten/Desktop/React/Gamify/src/Games/Quiz/QuizComp.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport './quizstyle.css'\r\nconst QuizComp = () => {\r\n    var Questionbank = [\r\n        {\r\n            Question: \"What is the capital of India?\",\r\n            Answers: [\r\n                { Answer: \"Delhi\", isCorrect: true },\r\n                { Answer: \"Pune\", isCorrect: false },\r\n                { Answer: \"Ranchi\", isCorrect: false },\r\n                { Answer: \"Patna\", isCorrect: false }\r\n            ]\r\n        },\r\n        {\r\n            Question: \"Who is the PM of India?\",\r\n            Answers: [\r\n                { Answer: \"Amit Shah\", isCorrect: false },\r\n                { Answer: \"Modi\", isCorrect: true },\r\n                { Answer: \"Raga\", isCorrect: false },\r\n                { Answer: \"Kejri\", isCorrect: false }\r\n            ]\r\n        }, {\r\n            Question: \"2 +3 = ?\",\r\n            Answers: [\r\n                { Answer: \"5\", isCorrect: true },\r\n                { Answer: \"7\", isCorrect: false },\r\n                { Answer: \"4\", isCorrect: false },\r\n                { Answer: \"3\", isCorrect: false }\r\n            ]\r\n        },\r\n        {\r\n            Question: \"What comes after january?\",\r\n            Answers: [\r\n                { Answer: \"feb\", isCorrect: true },\r\n                { Answer: \"march\", isCorrect: false },\r\n                { Answer: \"june\", isCorrect: false },\r\n                { Answer: \"sept\", isCorrect: false }\r\n            ]\r\n        },\r\n        {\r\n            Question: \"Which company pankaj is working currently?\",\r\n            Answers: [\r\n                { Answer: \"Accenture\", isCorrect: false },\r\n                { Answer: \"Oracle\", isCorrect: false },\r\n                { Answer: \"L&T\", isCorrect: true },\r\n                { Answer: \"IBM\", isCorrect: false }\r\n            ]\r\n        }\r\n    ]\r\n\r\n    //useState Hook\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\nconst handleAnswerResponse=(isCorrect)=>\r\n{\r\n    if(isCorrect)\r\n    {\r\n        setScore(score+1);\r\n    }\r\n\r\n   const nextQuestion= currentQuestion+1;\r\n   if(nextQuestion<Questionbank.length)\r\n   {\r\n    setCurrentQuestion(nextQuestion);\r\n   }\r\n   else{\r\n    setShowScore(true);\r\n   }\r\n}\r\n\r\nconst resetQuiz=()=>\r\n{\r\n    setCurrentQuestion(0);\r\n    setScore(0);\r\n    setShowScore(false);\r\n}\r\n\r\n    return (\r\n        <div className='app'>\r\n            {showScore ? (\r\n                <div className='score-section'>\r\n                    You have scored {score} out of {Questionbank.length}\r\n                    <>\r\n                       <button type=\"submit\" onClick={resetQuiz}>Play Again!!</button>\r\n                    </>\r\n                </div>\r\n            )\r\n                : (\r\n                    <>\r\n                        <div className='question-section'>\r\n                            <div className='question-count'>\r\n                               <span>{currentQuestion+1}</span>/{Questionbank.length}\r\n                            </div>\r\n\r\n                            <div className='question-text'>\r\n                             {Questionbank[currentQuestion].Question}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='answer-section'>\r\n                          {Questionbank[currentQuestion].Answers.map((answer)=>\r\n                          (\r\n                              <button onClick={()=>handleAnswerResponse(answer.isCorrect)}>{answer.Answer}</button>\r\n                          ))}\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizComp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}