{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niten\\\\Desktop\\\\React\\\\Gamify\\\\src\\\\Games\\\\breakoutvideo\\\\src\\\\games\\\\breakout\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { BallMovement } from \"./BallMovement\";\nimport data from \"../../data\";\nimport WallCollision from \"./util/WallCollision\";\nimport Paddle from \"./Paddle\";\nimport Brick from \"./Brick\";\nimport BrickCollision from \"./util/BrickCollision\";\nimport PaddleHit from \"./util/PaddleHit\";\nimport PlayerStats from \"./PlayerStats\";\nimport AllBroken from \"./util/AllBroke\";\nimport ResetBall from \"./util/ResetBall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet bricks = [];\nlet {\n  ballObj,\n  paddleProps,\n  brickObj,\n  player\n} = data;\nexport default function Board() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const render = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      paddleProps.y = canvas.height - 30;\n\n      // Assign Bricks\n      let newBrickSet = Brick(player.level, bricks, canvas, brickObj);\n      if (newBrickSet && newBrickSet.length > 0) {\n        bricks = newBrickSet;\n      }\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      PlayerStats(ctx, player, canvas);\n\n      // Display Bricks\n      bricks.map(brick => {\n        return brick.draw(ctx);\n      });\n\n      // Handle Ball Movement\n      BallMovement(ctx, ballObj);\n\n      // Check all broken\n      AllBroken(bricks, player, canvas, ballObj);\n      if (player.lives === 0) {\n        alert(\"Game Over! Press ok to restart\");\n        player.lives = 5;\n        player.level = 1;\n        player.score = 0;\n        ResetBall(ballObj, canvas, paddleProps);\n        bricks.length = 0;\n      }\n      // Ball and Wall Collision\n      WallCollision(ballObj, canvas, player, paddleProps);\n\n      // Brick Collision\n      let brickCollision;\n      for (let i = 0; i < bricks.length; i++) {\n        brickCollision = BrickCollision(ballObj, bricks[i]);\n        if (brickCollision.hit && !bricks[i].broke) {\n          // console.log(brickCollision);\n          if (brickCollision.axis === \"X\") {\n            ballObj.dx *= -1;\n            bricks[i].broke = true;\n          } else if (brickCollision.axis === \"Y\") {\n            ballObj.dy *= -1;\n            bricks[i].broke = true;\n          }\n          player.score += 10;\n        }\n      }\n      Paddle(ctx, canvas, paddleProps);\n\n      // Paddle + Ball Collision\n      PaddleHit(ballObj, paddleProps);\n      requestAnimationFrame(render);\n    };\n    render();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameHeader\",\n      children: \"Breakout Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      ref: canvasRef,\n      onMouseMove: event => paddleProps.x = event.clientX - (window.innerWidth < 900 ? 10 : window.innerWidth * 20 / 200) - paddleProps.width / 2 - 10,\n      height: \"500\",\n      width: window.innerWidth < 900 ? window.innerWidth - 20 : window.innerWidth - window.innerWidth * 20 / 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useRef","BallMovement","data","WallCollision","Paddle","Brick","BrickCollision","PaddleHit","PlayerStats","AllBroken","ResetBall","jsxDEV","_jsxDEV","bricks","ballObj","paddleProps","brickObj","player","Board","_s","canvasRef","render","canvas","current","ctx","getContext","y","height","newBrickSet","level","length","clearRect","width","map","brick","draw","lives","alert","score","brickCollision","i","hit","broke","axis","dx","dy","requestAnimationFrame","style","textAlign","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","onMouseMove","event","x","clientX","window","innerWidth","_c","$RefreshReg$"],"sources":["C:/Users/niten/Desktop/React/Gamify/src/Games/breakoutvideo/src/games/breakout/Board.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { BallMovement } from \"./BallMovement\";\r\nimport data from \"../../data\";\r\nimport WallCollision from \"./util/WallCollision\";\r\nimport Paddle from \"./Paddle\";\r\nimport Brick from \"./Brick\";\r\nimport BrickCollision from \"./util/BrickCollision\";\r\nimport PaddleHit from \"./util/PaddleHit\";\r\nimport PlayerStats from \"./PlayerStats\";\r\nimport AllBroken from \"./util/AllBroke\";\r\nimport ResetBall from \"./util/ResetBall\";\r\n\r\nlet bricks = [];\r\nlet { ballObj, paddleProps, brickObj, player } = data;\r\nexport default function Board() {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const render = () => {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      paddleProps.y = canvas.height - 30;\r\n\r\n      // Assign Bricks\r\n      let newBrickSet = Brick(player.level, bricks, canvas, brickObj);\r\n\r\n      if (newBrickSet && newBrickSet.length > 0) {\r\n        bricks = newBrickSet;\r\n      }\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      PlayerStats(ctx, player, canvas);\r\n\r\n      // Display Bricks\r\n      bricks.map((brick) => {\r\n        return brick.draw(ctx);\r\n      });\r\n\r\n      // Handle Ball Movement\r\n      BallMovement(ctx, ballObj);\r\n\r\n      // Check all broken\r\n      AllBroken(bricks, player, canvas, ballObj);\r\n\r\n      if (player.lives === 0) {\r\n        alert(\"Game Over! Press ok to restart\");\r\n\r\n        player.lives = 5;\r\n        player.level = 1;\r\n        player.score = 0;\r\n        ResetBall(ballObj, canvas, paddleProps);\r\n        bricks.length = 0;\r\n      }\r\n      // Ball and Wall Collision\r\n      WallCollision(ballObj, canvas, player, paddleProps);\r\n\r\n      // Brick Collision\r\n      let brickCollision;\r\n\r\n      for (let i = 0; i < bricks.length; i++) {\r\n        brickCollision = BrickCollision(ballObj, bricks[i]);\r\n\r\n        if (brickCollision.hit && !bricks[i].broke) {\r\n          // console.log(brickCollision);\r\n          if (brickCollision.axis === \"X\") {\r\n            ballObj.dx *= -1;\r\n            bricks[i].broke = true;\r\n          } else if (brickCollision.axis === \"Y\") {\r\n            ballObj.dy *= -1;\r\n            bricks[i].broke = true;\r\n          }\r\n          player.score += 10;\r\n        }\r\n      }\r\n      Paddle(ctx, canvas, paddleProps);\r\n\r\n      // Paddle + Ball Collision\r\n      PaddleHit(ballObj, paddleProps);\r\n\r\n      requestAnimationFrame(render);\r\n    };\r\n    render();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1 className=\"gameHeader\">Breakout Game</h1>\r\n      <canvas\r\n        id=\"canvas\"\r\n        ref={canvasRef}\r\n        onMouseMove={(event) =>\r\n          (paddleProps.x =\r\n            event.clientX -\r\n            (window.innerWidth < 900 ? 10 : (window.innerWidth * 20) / 200) -\r\n            paddleProps.width / 2 -\r\n            10)\r\n        }\r\n        height=\"500\"\r\n        width={\r\n          window.innerWidth < 900\r\n            ? window.innerWidth - 20\r\n            : window.innerWidth - (window.innerWidth * 20) / 100\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}