{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niten\\\\Desktop\\\\React\\\\Gamify\\\\src\\\\Games\\\\react-hangman\\\\Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Hangman.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHALLENGES = [\"tiger\", \"zebra\", \"red panda\", \"capybara\", \"polar bear\", \"giraffe\", \"bearded dragon\", \"python\", \"elephant\", \"African Bullfrog\", \"Alligator\", \"Bear\", \"Camel\", \"Cheetah\", \"Elephant\", \"Flamingo\", \"Giraffe\", \"Gorilla\", \"Hippo\", \"Hyena\", \"Iguana\", \"Kangaroo\", \"Koala\", \"Lion\", \"Monkey\", \"Panda\", \"Parrot\", \"Penguin\", \"Sloth\", \"Snake\"];\nlet layouts = [[\"\"], [\"\", \"o\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"o\", \"\", \"-\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"o\", \"\", \"-\", \"|\", \"\", \"\", \"\", \"\"], [\"\", \"o\", \"\", \"-\", \"|\", \"-\", \"\", \"\", \"\"], [\"\", \"o\", \"\", \"-\", \"|\", \"-\", \"/\", \"\", \"\"], [\"placeholder\"]];\nfunction Hangman() {\n  _s();\n  const [challenge, setChallenge] = useState(\"...\");\n  const [letter, setLetter] = useState(\"Please enter letter\");\n  const [blanks, setBlanks] = useState(\" \");\n  const [markdown, setMarkdown] = useState(\"\");\n  const [layout, setLayout] = useState(layouts[0]);\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const generatePhrase = () => {\n    const randomChallenge = CHALLENGES[Math.floor(Math.random() * CHALLENGES.length)];\n    const currentBlanks = randomChallenge.split(\"\").map(e => e !== \" \" ? \"_\" : \" \").join(\"\");\n    setChallenge(randomChallenge);\n    setBlanks(currentBlanks);\n  };\n  const handleKeyPress = e => {\n    const newMarkdown = e.target.value;\n    const newLetter = newMarkdown.charAt(e.target.value.length - 1);\n    setMarkdown(newMarkdown);\n    setLetter(newLetter);\n  };\n  const reset = () => {\n    window.location.reload();\n  };\n  useEffect(() => {\n    if (blanks === challenge) {\n      setWinner(true); // moved this from the \"else if\" to here and that worked\n      layout[1] = \"ðŸ˜Ž\";\n    }\n    if (challenge.includes(letter)) {\n      let newBlanks = blanks.split(\"\").map((a, index) => challenge[index] === letter ? letter : a).join(\"\");\n      setBlanks(newBlanks);\n    } else if (letter !== \"Please enter letter\" && !challenge.includes(letter)) {\n      if (layouts.length - 1 > 1) {\n        layouts.shift();\n        setLayout(layouts[0]);\n      } else {\n        setGameOver(true);\n        setLayout([\"\", \"ðŸ˜¢\", \"\", \"-\", \"|\", \"-\", \"/\", \"\", \" \\\\\"]);\n      }\n    }\n  }, [letter, blanks, challenge, winner]);\n  useEffect(() => {\n    generatePhrase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myHangman\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"| \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), \" | \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }, this), \" | \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this), layout.slice(0, 3), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 30\n      }, this), \" \", layout.slice(3, 6), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 58\n      }, this), \" \", layout.slice(6, 9)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: blanks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: handleKeyPress,\n      value: markdown,\n      disabled: gameOver || winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameOver || winner ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => reset(),\n        children: gameOver ? 'Restart Game?' : 'You Win! Play Again?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hangman: Zoo Animal Edition - Guess the animal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Hangman, \"AoP74O2jjgs1WW3HizOCpgJcqzM=\");\n_c = Hangman;\nexport default Hangman;\n\n// DEPLOYED TO HEROKU. Domain: https://hangman-romanrenders.herokuapp.com/\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CHALLENGES","layouts","Hangman","_s","challenge","setChallenge","letter","setLetter","blanks","setBlanks","markdown","setMarkdown","layout","setLayout","gameOver","setGameOver","winner","setWinner","generatePhrase","randomChallenge","Math","floor","random","length","currentBlanks","split","map","e","join","handleKeyPress","newMarkdown","target","value","newLetter","charAt","reset","window","location","reload","includes","newBlanks","a","index","shift","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/niten/Desktop/React/Gamify/src/Games/react-hangman/Hangman.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Hangman.css\";\r\n\r\nconst CHALLENGES = [\r\n  \"tiger\",\r\n  \"zebra\",\r\n  \"red panda\",\r\n  \"capybara\",\r\n  \"polar bear\",\r\n  \"giraffe\",\r\n  \"bearded dragon\",\r\n  \"python\",\r\n  \"elephant\",\r\n  \"African Bullfrog\",\r\n  \"Alligator\",\r\n  \"Bear\",\r\n  \"Camel\",\r\n  \"Cheetah\",\r\n  \"Elephant\",\r\n  \"Flamingo\",\r\n  \"Giraffe\",\r\n  \"Gorilla\",\r\n  \"Hippo\",\r\n  \"Hyena\",\r\n  \"Iguana\",\r\n  \"Kangaroo\",\r\n  \"Koala\",\r\n  \"Lion\",\r\n  \"Monkey\",\r\n  \"Panda\",\r\n  \"Parrot\",\r\n  \"Penguin\",\r\n  \"Sloth\",\r\n  \"Snake\"\r\n];\r\n\r\nlet layouts = [\r\n  [\"\"],\r\n  [\"\", \"o\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n  [\"\", \"o\", \"\", \"-\", \"\", \"\", \"\", \"\", \"\"],\r\n  [\"\", \"o\", \"\", \"-\", \"|\", \"\", \"\", \"\", \"\"],\r\n  [\"\", \"o\", \"\", \"-\", \"|\", \"-\", \"\", \"\", \"\"],\r\n  [\"\", \"o\", \"\", \"-\", \"|\", \"-\", \"/\", \"\", \"\"],\r\n  [\"placeholder\"]\r\n];\r\n\r\nfunction Hangman() {\r\n  const [challenge, setChallenge] = useState(\"...\");\r\n  const [letter, setLetter] = useState(\"Please enter letter\");\r\n  const [blanks, setBlanks] = useState(\" \");\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [layout, setLayout] = useState(layouts[0]);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState(false);\r\n\r\n  const generatePhrase = () => {\r\n    const randomChallenge =\r\n      CHALLENGES[Math.floor(Math.random() * CHALLENGES.length)];\r\n    const currentBlanks = randomChallenge\r\n      .split(\"\")\r\n      .map((e) => (e !== \" \" ? \"_\" : \" \"))\r\n      .join(\"\");\r\n    setChallenge(randomChallenge);\r\n    setBlanks(currentBlanks);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    const newMarkdown = e.target.value;\r\n    const newLetter = newMarkdown.charAt(e.target.value.length - 1);\r\n    setMarkdown(newMarkdown);\r\n    setLetter(newLetter);\r\n  };\r\n\r\n  const reset = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (blanks === challenge) {\r\n      setWinner(true); // moved this from the \"else if\" to here and that worked\r\n      layout[1] = \"ðŸ˜Ž\"\r\n    }\r\n    if (challenge.includes(letter)) {\r\n      let newBlanks = blanks\r\n        .split(\"\")\r\n        .map((a, index) => (challenge[index] === letter ? letter : a))\r\n        .join(\"\");\r\n      setBlanks(newBlanks);\r\n    } else if (\r\n      letter !== \"Please enter letter\" &&\r\n      !challenge.includes(letter)\r\n    ) {\r\n      if (layouts.length - 1 > 1) {\r\n        layouts.shift();\r\n        setLayout(layouts[0]);\r\n      } else {\r\n        setGameOver(true);\r\n        setLayout([\"\", \"ðŸ˜¢\", \"\", \"-\", \"|\", \"-\", \"/\", \"\", \" \\\\\"]);\r\n      }\r\n    }\r\n  }, [letter, blanks, challenge, winner]);\r\n  useEffect(() => {\r\n    generatePhrase();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"myHangman\">\r\n      <h2>\r\n        | <br /> | <br /> | <br />\r\n        {layout.slice(0, 3)} <br /> {layout.slice(3, 6)} <br /> {layout.slice(6, 9)}\r\n      </h2>\r\n      <h3 >{blanks}</h3>\r\n      <h3>{letter}</h3>\r\n      <textarea\r\n        onChange={handleKeyPress}\r\n        value={markdown}\r\n        disabled={gameOver || winner}\r\n      />\r\n\r\n      <div>\r\n          {gameOver || winner ? (\r\n            <button className=\"button\" onClick={() => reset()}>\r\n              {gameOver ? 'Restart Game?' : 'You Win! Play Again?'}\r\n            </button>\r\n          ) : ''}\r\n      </div>  \r\n\r\n      <div className=\"title\">\r\n        <h2>Hangman: Zoo Animal Edition - Guess the animal</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Hangman;\r\n\r\n// DEPLOYED TO HEROKU. Domain: https://hangman-romanrenders.herokuapp.com/\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}