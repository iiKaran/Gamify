{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niten\\\\Desktop\\\\React\\\\Gamify\\\\src\\\\Games\\\\WordGame\\\\Word.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Wordstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WORDS = [\"React\", \"Next\", \"Website\", \"Engineer\", \"TypeScript\", \"Developer\", \"Dream Job\", \"Time to code\"];\nconst WordScramble = () => {\n  _s();\n  const [isPlayOn, setIsPlayOn] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [scrambledWord, setScrambledWord] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleInputChange = event => {\n    setInputValue(event.target.value.toUpperCase());\n  };\n  const selectWord = () => {\n    const randomIndex = Math.floor(Math.random() * WORDS.length);\n    const tempWord = WORDS[randomIndex];\n    return tempWord;\n  };\n  const handleButtonClick = () => {\n    if (inputValue !== \"\") {\n      if (correctWord === inputValue) {\n        setMessage(\"Correct Answer\");\n      } else {\n        setMessage(\"Wrong Answer\");\n      }\n    }\n  };\n  const handleStartGame = () => {\n    setIsPlayOn(true);\n    setInputValue(\"\");\n    setMessage(\"\");\n    const word = selectWord().toUpperCase();\n    setCorrectWord(word);\n    setScrambledWord(constructScrambledWord(word));\n    //setScrambledWord(constructScrambledWordModernJS(word));\n  };\n\n  const constructScrambledWord = word => {\n    const shuffledArray = word.split(\"\");\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray.join(\"\");\n  };\n  const constructScrambledWordModernJS = word => {\n    const shuffledArray = word.split(\"\").reduce((newArr, _, i) => {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n      return newArr;\n    }, [...word]);\n    return shuffledArray.join(\"\");\n  };\n  useEffect(() => {\n    let clearMessage;\n    if (message === \"Wrong Answer\") {\n      clearMessage = setTimeout(() => setMessage(\"\"), 800);\n    }\n    return () => {\n      if (clearMessage) {\n        clearTimeout(clearMessage);\n      }\n    };\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word_scramble\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), !!message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Scramble\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [isPlayOn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board\",\n          children: correctWord.split(\"\").map((el, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"square_bg\",\n            children: inputValue[i]\n          }, `${el}_${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"scrambled_word\",\n          children: scrambledWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handleInputChange,\n            value: inputValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleButtonClick,\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start_game\",\n        type: \"button\",\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }, this), isPlayOn && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start_game new\",\n        type: \"button\",\n        onClick: handleStartGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n};\n_s(WordScramble, \"9TYHlcqQl2/K5/kvYLkiYlBLEbs=\");\n_c = WordScramble;\nexport default WordScramble;\nvar _c;\n$RefreshReg$(_c, \"WordScramble\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WORDS","WordScramble","_s","isPlayOn","setIsPlayOn","inputValue","setInputValue","correctWord","setCorrectWord","scrambledWord","setScrambledWord","message","setMessage","handleInputChange","event","target","value","toUpperCase","selectWord","randomIndex","Math","floor","random","length","tempWord","handleButtonClick","handleStartGame","word","constructScrambledWord","shuffledArray","split","i","j","join","constructScrambledWordModernJS","reduce","newArr","_","clearMessage","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/niten/Desktop/React/Gamify/src/Games/WordGame/Word.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Wordstyle.css\";\r\n\r\nconst WORDS = [\r\n\t\"React\",\r\n\t\"Next\",\r\n\t\"Website\",\r\n\t\"Engineer\",\r\n\t\"TypeScript\",\r\n\t\"Developer\",\r\n\t\"Dream Job\",\r\n\t\"Time to code\",\r\n];\r\n\r\nconst WordScramble = () => {\r\n\tconst [isPlayOn, setIsPlayOn] = useState(false);\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\tconst [correctWord, setCorrectWord] = useState(\"\");\r\n\tconst [scrambledWord, setScrambledWord] = useState(\"\");\r\n\r\n\tconst [message, setMessage] = useState(\"\");\r\n\r\n\tconst handleInputChange = (event) => {\r\n\t\tsetInputValue(event.target.value.toUpperCase());\r\n\t};\r\n\r\n\tconst selectWord = () => {\r\n\t\tconst randomIndex = Math.floor(Math.random() * WORDS.length);\r\n\t\tconst tempWord = WORDS[randomIndex];\r\n\t\treturn tempWord;\r\n\t};\r\n\r\n\tconst handleButtonClick = () => {\r\n\t\tif (inputValue !== \"\") {\r\n\t\t\tif (correctWord === inputValue) {\r\n\t\t\t\tsetMessage(\"Correct Answer\");\r\n\t\t\t} else {\r\n\t\t\t\tsetMessage(\"Wrong Answer\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleStartGame = () => {\r\n\t\tsetIsPlayOn(true);\r\n\t\tsetInputValue(\"\");\r\n\t\tsetMessage(\"\");\r\n\r\n\t\tconst word = selectWord().toUpperCase();\r\n\t\tsetCorrectWord(word);\r\n\t\tsetScrambledWord(constructScrambledWord(word));\r\n\t\t//setScrambledWord(constructScrambledWordModernJS(word));\r\n\t};\r\n\r\n\tconst constructScrambledWord = (word) => {\r\n\t\tconst shuffledArray = word.split(\"\");\r\n\t\tfor (let i = shuffledArray.length - 1; i > 0; i--) {\r\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t[shuffledArray[i], shuffledArray[j]] = [\r\n\t\t\t\tshuffledArray[j],\r\n\t\t\t\tshuffledArray[i],\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn shuffledArray.join(\"\");\r\n\t};\r\n\r\n\tconst constructScrambledWordModernJS = (word) => {\r\n\t\tconst shuffledArray = word.split(\"\").reduce(\r\n\t\t\t(newArr, _, i) => {\r\n\t\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t\t[newArr[i], newArr[j]] = [newArr[j], newArr[i]];\r\n\t\t\t\treturn newArr;\r\n\t\t\t},\r\n\t\t\t[...word]\r\n\t\t);\r\n\r\n\t\treturn shuffledArray.join(\"\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet clearMessage;\r\n\t\tif (message === \"Wrong Answer\") {\r\n\t\t\tclearMessage = setTimeout(() => setMessage(\"\"), 800);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tif (clearMessage) {\r\n\t\t\t\tclearTimeout(clearMessage);\r\n\t\t\t}\r\n\t\t};\r\n\t}, [message]);\r\n\r\n\treturn (\r\n\t\t<div className='word_scramble'>\r\n            <h1>hello</h1>\r\n\t\t\t{!!message && (\r\n\t\t\t\t<div className='message'>\r\n\t\t\t\t\t<p> {message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<h1>Word Scramble</h1>\r\n\t\t\t<div className='content'>\r\n\t\t\t\t{isPlayOn ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='board'>\r\n\t\t\t\t\t\t\t{correctWord.split(\"\").map((el, i) => (\r\n\t\t\t\t\t\t\t\t<span key={`${el}_${i}`} className='square_bg'>\r\n\t\t\t\t\t\t\t\t\t{inputValue[i]}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className='scrambled_word'>{scrambledWord}</p>\r\n\t\t\t\t\t\t<div className='field'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button type='button' onClick={handleButtonClick}>\r\n\t\t\t\t\t\t\t\tEnter\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='start_game'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={handleStartGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{isPlayOn && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='start_game new'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={handleStartGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNew Game\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WordScramble;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}